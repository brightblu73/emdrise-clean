# PHASE 2 â€“ STEP 4C (cleanup): use STRIPE_PRICE_ID from Secrets only, no hard-coded fallback

set -e

# 1) Ensure the correct Price ID is stored in Replit Secrets (overwrite if needed)
replit secrets set STRIPE_PRICE_ID price_1Rvk0XIM2Jemf1le0GSfooRm

# 2) Remove ANY hard-coded price_... strings in the server and force env usage
node <<'NODE'
const fs = require('fs'), path = require('path');

function walk(dir){
  const out=[];
  for(const e of fs.readdirSync(dir,{withFileTypes:true})){
    if(['node_modules','dist','.vercel','.git','.cache'].includes(e.name)) continue;
    const p=path.join(dir,e.name);
    if(e.isDirectory()) out.push(...walk(p));
    else if(/\.(t|j)s$/.test(e.name)) out.push(p);
  }
  return out;
}

const files = walk(process.cwd());
const PRICE = /price_[A-Za-z0-9]+/g;
let patched=0;

for(const f of files){
  let s = fs.readFileSync(f,'utf8');
  if(!s.includes('price_')) continue;

  // Replace explicit hard-coded price IDs with env usage
  let s2 = s
    .replace(/price:\s*['"`]price_[A-Za-z0-9]+['"`]/g, 'price: process.env.STRIPE_PRICE_ID')
    .replace(/(['"`])price_[A-Za-z0-9]+(['"`])/g, 'process.env.STRIPE_PRICE_ID');

  if(s2 !== s){
    fs.writeFileSync(f,s2,'utf8');
    console.log('Patched:', f);
    patched++;
  }
}
console.log('Total patched files:', patched);
NODE

# 3) Add a tiny health endpoint that returns which Stripe env vars are present (booleans only)
apply_patch << 'PATCH'
*** Begin Patch
*** Update File: server/index.ts
@@
 const app = express();
 app.use(cors({ origin: true }));
 app.use(express.json());
 
+// Health/env check (does not leak secrets)
+app.get('/api/health/stripe', (req, res) => {
+  res.json({
+    has_secret: !!process.env.STRIPE_SECRET_KEY,
+    has_price: !!process.env.STRIPE_PRICE_ID,
+    has_publishable: !!process.env.STRIPE_PUBLISHABLE_KEY
+  });
+});
+
*** End Patch
PATCH

# 4) Add a strict guard when creating sessions if STRIPE_PRICE_ID is missing
apply_patch << 'PATCH'
*** Begin Patch
*** Update File: server/index.ts
@@
 app.post('/api/create-checkout-session', async (req, res) => {
   try {
+    if (!process.env.STRIPE_PRICE_ID) {
+      console.error('Missing STRIPE_PRICE_ID env');
+      return res.status(500).json({ error: 'Server not configured (price id)' });
+    }
     const { user_id, customer_email } = req.body as { user_id: string; customer_email?: string };
     const session = await stripe.checkout.sessions.create({
       mode: 'subscription',
-      line_items: [{ price: STRIPE_PRICE_ID!, quantity: 1 }],
+      line_items: [{ price: process.env.STRIPE_PRICE_ID!, quantity: 1 }],
*** End Patch
PATCH

# 5) Restart dev so the server picks up the changes and secrets
restart

# 6) Quick verify (no secrets printed): should show true for has_secret and has_price
echo "Hit the dev URL /api/health/stripe in your preview to verify booleans are true."
